{"version":3,"sources":["App.module.scss","App.js","index.js"],"names":["module","exports","App","state","contacts","id","name","number","filter","contactId","uuidv4","phoneId","filterId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","obj","prevState","includes","alert","contact","reset","addContact","comleted","changeFilter","getVisibleContacts","normalizeFilter","toLowerCase","deleteContact","visibleContacts","this","className","s","section","title","onSubmit","form","htmlFor","formLabel","type","pattern","required","inputWindow","onChange","btn","contactList","map","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f4d0f7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2tHCd\",\"section\":\"App_section__RPKWe\",\"form\":\"App_form__XKTYi\",\"formLabel\":\"App_formLabel__1p4CA\",\"inputWindow\":\"App_inputWindow__F88wV\",\"contactList\":\"App_contactList__3hHdX\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.scss';\n// import ContactForm from './components/ContactForm'\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n    name: '',\n    number: ''\n  }\n\n  contactId = uuidv4()\n  phoneId = uuidv4()\n  filterId = uuidv4()\n\n  handleChange = e => {\n    const {name, value} = e.currentTarget;\n\n    this.setState({[name]: value})\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const obj = {\n      name: this.state.name,\n      number: this.state.number\n    }\n    if([...this.prevState.contacts.includes(e.name)]) {\n      alert(`${obj.name} is already in contacts`)\n    } else {\n      this.setState({contact: obj});\n    }\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, obj]\n      }\n    })\n    this.reset()\n  }\n\n  reset = () => {\n    this.setState({name: '', number: '', filter: ''})\n  }\n\n  addContact = name => {\n    const contact ={\n      id: this.contactId,\n      name,\n      comleted: false,\n    }\n\n    this.setState(prevState => ({\n      name: [contact, ...prevState.contacts]\n    }))\n  }\n\n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  }  \n\n  getVisibleContacts = () => {\n    const { filter, contacts} = this.state\n    const normalizeFilter = filter.toLowerCase()\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter))\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(e => e.id !== contactId)\n    }))\n  }\n\n  \n  render () {\n\n    const visibleContacts = this.getVisibleContacts()\n\n    return (\n      <div className={s.section}>\n        <h2 className={s.title}>Phonebook</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className={s.form}> \n            <label htmlFor={this.contactId} className={s.formLabel}>\n              Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                className={s.inputWindow}\n                value={this.state.name}\n                onChange={this.handleChange}\n                id={this.contactId}\n              />\n            </label>\n            <label htmlFor={this.phoneId} className={s.formLabel}>\n              Phone\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                className={s.inputWindow}\n                value={this.state.number}\n                onChange={this.handleChange}\n                id={this.phoneId}\n              />\n            </label>\n          <button type='submit' title=\"Добавить контакт\" className={s.btn}>Add contact</button>\n          </div>\n        </form>\n\n\n        <h2 className={s.title}>Contacts</h2>\n        <label htmlFor={this.filterId} className={s.formLabel}>\n          Find contacts by name\n          <input \n            type='text'\n            className={s.inputWindow}\n            id={this.filterId}\n            value={this.state.filter}\n            onChange={this.changeFilter}\n          >\n          </input>\n        </label>\n\n        <ul className={s.contactList}>\n          {visibleContacts.map(({id, name, number}) => \n            <li key={id}>\n              <p>{name}: {number}</p>\n              <button \n                onClick={() => this.deleteContact(id)}>Delete</button>\n            </li>\n            \n            )}\n        </ul>\n        \n        \n\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}